---
- name: "Install dependencies as root: {{ APP_DEPENDENCIES | join(' ') }}"
  package:
    name: "{{ APP_DEPENDENCIES }}"
  become: true
  register: INSTALL_DEPENDENCIES
  ignore_errors: true
- name: "Install dependencies as user {{ APP_USER }}: {{ APP_DEPENDENCIES | join(' ') }}"
  shell: "pkcon install -y {{ item }} | true"
  loop: "{{ APP_DEPENDENCIES }}"
  when: INSTALL_DEPENDENCIES.failed
- name: Create the directory {{ APP_SRC }}
  file:
    name: "{{ APP_SRC }}"
    state: directory
    owner: "{{ APP_USER }}"
  become: "{{ APP_ROOT }}"
- name: Check for the {{ APP_NAME }} README file
  stat:
    path: "{{ APP_README }}"
  register: APP_README_PATH
- name: "Clone the {{ APP_REPO_SSH }} source code into {{ APP_SRC }}"
  ansible.builtin.git:
    repo: "{{ APP_REPO_SSH }}"
    dest: "{{ APP_SRC }}"
    version: "{{ APP_TAG }}"
  ignore_errors: true
  when: not APP_README_PATH.stat.exists
  register: CLONE_REPO
- name: "Clone the {{ APP_REPO_HTTPS }} source code into {{ APP_SRC }}"
  ansible.builtin.git:
    repo: "{{ APP_REPO_HTTPS }}"
    dest: "{{ APP_SRC }}"
    version: "{{ APP_TAG }}"
    recursive: true
    update: true
  when: not APP_README_PATH.stat.exists and CLONE_REPO.failed
- name: "Run env PKG_CONFIG_PATH={{ APP_PREFIX }}/lib64/pkgconfig:{{ APP_PREFIX }}/lib/pkgconfig ./configure --with-gtk --prefix={{ APP_PREFIX }}"
  shell: "env PKG_CONFIG_PATH={{ APP_PREFIX }}/lib64/pkgconfig:{{ APP_PREFIX }}/lib/pkgconfig ./configure --with-gtk --prefix={{ APP_PREFIX }}"
  args:
    chdir: "{{ APP_SRC }}"
- name: "Run env PKG_CONFIG_PATH={{ APP_PREFIX }}/lib64/pkgconfig:{{ APP_PREFIX }}/lib/pkgconfig make -j $(nproc)"
  shell: "env PKG_CONFIG_PATH={{ APP_PREFIX }}/lib64/pkgconfig:{{ APP_PREFIX }}/lib/pkgconfig make -j $(nproc)"
  args:
    chdir: "{{ APP_SRC }}"
- name: "Run env PKG_CONFIG_PATH={{ APP_PREFIX }}/lib64/pkgconfig:{{ APP_PREFIX }}/lib/pkgconfig make install -j $(nproc)"
  shell: "env PKG_CONFIG_PATH={{ APP_PREFIX }}/lib64/pkgconfig:{{ APP_PREFIX }}/lib/pkgconfig make install -j $(nproc)"
  args:
    chdir: "{{ APP_SRC }}"
  become: "{{ APP_ROOT }}"

